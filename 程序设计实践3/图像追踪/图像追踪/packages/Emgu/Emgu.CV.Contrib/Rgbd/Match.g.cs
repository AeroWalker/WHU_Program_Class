//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.Linemod
{
   public static partial class LinemodInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveMatchGetX(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveMatchSetX(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveMatchGetY(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveMatchSetY(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveMatchGetSimilarity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveMatchSetSimilarity(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveMatchGetTemplateId(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveMatchSetTemplateId(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern void cveMatchGetclass_id(IntPtr obj, IntPtr str);
	 [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern void cveMatchSetclass_id(IntPtr obj, IntPtr str);
     
   }

   public partial class Match
   {

     /// <summary>
     /// X position
     /// </summary>
     public int X
     {
        get { return LinemodInvoke.cveMatchGetX(_ptr); } 
        set { LinemodInvoke.cveMatchSetX(_ptr, value); }
     }
     
     /// <summary>
     /// Y position
     /// </summary>
     public int Y
     {
        get { return LinemodInvoke.cveMatchGetY(_ptr); } 
        set { LinemodInvoke.cveMatchSetY(_ptr, value); }
     }
     
     /// <summary>
     /// Similarity
     /// </summary>
     public float Similarity
     {
        get { return LinemodInvoke.cveMatchGetSimilarity(_ptr); } 
        set { LinemodInvoke.cveMatchSetSimilarity(_ptr, value); }
     }
     
     /// <summary>
     /// TemplateId
     /// </summary>
     public int TemplateId
     {
        get { return LinemodInvoke.cveMatchGetTemplateId(_ptr); } 
        set { LinemodInvoke.cveMatchSetTemplateId(_ptr, value); }
     }
     
     /// <summary>
     /// Class Id
     /// </summary>
     public String class_id
     {
        get 
        { 
           using (CvString s = new CvString())
           {  
              LinemodInvoke.cveMatchGetclass_id(_ptr, s); 
              return s.ToString();
           }
        } 
		set
		{
		   using (CvString s = new CvString(value))
           {  
              LinemodInvoke.cveMatchSetclass_id(_ptr, s); 
           }
		}
     }
     
   }
}
