//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.XPhoto
{
   public static partial class XPhotoInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleWBGetInputMin(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleWBSetInputMin(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleWBGetInputMax(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleWBSetInputMax(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleWBGetOutputMin(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleWBSetOutputMin(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleWBGetOutputMax(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleWBSetOutputMax(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleWBGetP(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleWBSetP(
        IntPtr obj,  
        float val);
     
   }

   public partial class SimpleWB
   {

     /// <summary>
     /// Input image range minimum value
     /// </summary>
     public float InputMin
     {
        get { return XPhotoInvoke.cveSimpleWBGetInputMin(_ptr); } 
        set { XPhotoInvoke.cveSimpleWBSetInputMin(_ptr, value); }
     }
     
     /// <summary>
     /// Input image range maximum value
     /// </summary>
     public float InputMax
     {
        get { return XPhotoInvoke.cveSimpleWBGetInputMax(_ptr); } 
        set { XPhotoInvoke.cveSimpleWBSetInputMax(_ptr, value); }
     }
     
     /// <summary>
     /// Output image range minimum value
     /// </summary>
     public float OutputMin
     {
        get { return XPhotoInvoke.cveSimpleWBGetOutputMin(_ptr); } 
        set { XPhotoInvoke.cveSimpleWBSetOutputMin(_ptr, value); }
     }
     
     /// <summary>
     /// Output image range maximum value
     /// </summary>
     public float OutputMax
     {
        get { return XPhotoInvoke.cveSimpleWBGetOutputMax(_ptr); } 
        set { XPhotoInvoke.cveSimpleWBSetOutputMax(_ptr, value); }
     }
     
     /// <summary>
     /// Percent of top/bottom values to ignore
     /// </summary>
     public float P
     {
        get { return XPhotoInvoke.cveSimpleWBGetP(_ptr); } 
        set { XPhotoInvoke.cveSimpleWBSetP(_ptr, value); }
     }
     
   }
}
