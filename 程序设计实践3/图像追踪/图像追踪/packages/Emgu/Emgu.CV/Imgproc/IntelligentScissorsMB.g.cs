//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV
{
   public static partial class CvInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveIntelligentScissorsMBSetEdgeFeatureZeroCrossingParameters(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveIntelligentScissorsMBSetGradientMagnitudeMaxLimit(
        IntPtr obj,  
        float val);
     
   }

   public partial class IntelligentScissorsMB
   {

     /// <summary>
     /// Switch to Laplacian Zero-Crossing edge feature extractor and specify its parameters. This feature extractor is used by default according to article. Implementation has additional filtering for regions with low-amplitude noise. This filtering is enabled through parameter of minimal gradient amplitude (use some small value 4, 8, 16).
     /// </summary>
	 /// <param name="value">The value</param>
     public void SetEdgeFeatureZeroCrossingParameters(float value)
     {
        CvInvoke.cveIntelligentScissorsMBSetEdgeFeatureZeroCrossingParameters(_ptr, value); 
     }
     
     /// <summary>
     /// Specify gradient magnitude max value threshold. Zero limit value is used to disable gradient magnitude thresholding (default behavior, as described in original article). Otherwize pixels with gradient magnitude greater than threshold have zero cost.
     /// </summary>
	 /// <param name="value">The value</param>
     public void SetGradientMagnitudeMaxLimit(float value)
     {
        CvInvoke.cveIntelligentScissorsMBSetGradientMagnitudeMaxLimit(_ptr, value); 
     }
     
   }
}
