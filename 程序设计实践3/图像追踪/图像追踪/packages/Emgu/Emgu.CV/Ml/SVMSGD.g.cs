//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.ML
{
   public static partial class MlInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern SVMSGD.SvmsgdType cveSVMSGDGetType(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetType(
        IntPtr obj,  
        SVMSGD.SvmsgdType val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern SVMSGD.MarginType cveSVMSGDGetMargin(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetMargin(
        IntPtr obj,  
        SVMSGD.MarginType val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSVMSGDGetMarginRegularization(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetMarginRegularization(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSVMSGDGetInitialStepSize(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetInitialStepSize(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSVMSGDGetStepDecreasingPower(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetStepDecreasingPower(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDGetTermCriteria(IntPtr obj, ref MCvTermCriteria val);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSVMSGDSetTermCriteria(IntPtr obj, ref MCvTermCriteria val);
     
   }

   public partial class SVMSGD
   {

     /// <summary>
     /// Algorithm type
     /// </summary>
     public SVMSGD.SvmsgdType Type
     {
        get { return MlInvoke.cveSVMSGDGetType(_ptr); } 
        set { MlInvoke.cveSVMSGDSetType(_ptr, value); }
     }
     
     /// <summary>
     /// Margin type
     /// </summary>
     public SVMSGD.MarginType Margin
     {
        get { return MlInvoke.cveSVMSGDGetMargin(_ptr); } 
        set { MlInvoke.cveSVMSGDSetMargin(_ptr, value); }
     }
     
     /// <summary>
     /// marginRegularization of a SVMSGD optimization problem
     /// </summary>
     public float MarginRegularization
     {
        get { return MlInvoke.cveSVMSGDGetMarginRegularization(_ptr); } 
        set { MlInvoke.cveSVMSGDSetMarginRegularization(_ptr, value); }
     }
     
     /// <summary>
     /// initialStepSize of a SVMSGD optimization problem
     /// </summary>
     public float InitialStepSize
     {
        get { return MlInvoke.cveSVMSGDGetInitialStepSize(_ptr); } 
        set { MlInvoke.cveSVMSGDSetInitialStepSize(_ptr, value); }
     }
     
     /// <summary>
     /// stepDecreasingPower of a SVMSGD optimization problem
     /// </summary>
     public float StepDecreasingPower
     {
        get { return MlInvoke.cveSVMSGDGetStepDecreasingPower(_ptr); } 
        set { MlInvoke.cveSVMSGDSetStepDecreasingPower(_ptr, value); }
     }
     
     /// <summary>
     /// Termination criteria of the training algorithm.
     /// </summary>
     public MCvTermCriteria TermCriteria
     {
        get { MCvTermCriteria v = new MCvTermCriteria(); MlInvoke.cveSVMSGDGetTermCriteria(_ptr, ref v); return v; } 
        set { MlInvoke.cveSVMSGDSetTermCriteria(_ptr, ref value); }
     }
     
   }
}
