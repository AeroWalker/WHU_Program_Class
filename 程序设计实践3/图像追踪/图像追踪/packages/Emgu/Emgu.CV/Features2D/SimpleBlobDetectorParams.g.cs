//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.Features2D
{
   public static partial class Features2DInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetThresholdStep(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetThresholdStep(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinThreshold(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinThreshold(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMaxThreshold(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMaxThreshold(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinDistBetweenBlobs(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinDistBetweenBlobs(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveSimpleBlobDetectorParamsGetFilterByColor(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetFilterByColor(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern Byte cveSimpleBlobDetectorParamsGetblobColor(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetblobColor(
        IntPtr obj,  
        Byte val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveSimpleBlobDetectorParamsGetFilterByArea(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetFilterByArea(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinArea(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinArea(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMaxArea(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMaxArea(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveSimpleBlobDetectorParamsGetFilterByCircularity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetFilterByCircularity(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinCircularity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinCircularity(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMaxCircularity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMaxCircularity(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveSimpleBlobDetectorParamsGetFilterByInertia(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetFilterByInertia(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinInertiaRatio(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinInertiaRatio(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMaxInertiaRatio(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMaxInertiaRatio(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveSimpleBlobDetectorParamsGetFilterByConvexity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetFilterByConvexity(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMinConvexity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinConvexity(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveSimpleBlobDetectorParamsGetMaxConvexity(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMaxConvexity(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern IntPtr cveSimpleBlobDetectorParamsGetMinRepeatability(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveSimpleBlobDetectorParamsSetMinRepeatability(
        IntPtr obj,  
        IntPtr val);
     
   }

   public partial class SimpleBlobDetectorParams
   {

     /// <summary>
     /// Threshold step
     /// </summary>
     public float ThresholdStep
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetThresholdStep(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetThresholdStep(_ptr, value); }
     }
     
     /// <summary>
     /// Min threshold
     /// </summary>
     public float MinThreshold
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinThreshold(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinThreshold(_ptr, value); }
     }
     
     /// <summary>
     /// Max threshold
     /// </summary>
     public float MaxThreshold
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMaxThreshold(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMaxThreshold(_ptr, value); }
     }
     
     /// <summary>
     /// Min dist between blobs
     /// </summary>
     public float MinDistBetweenBlobs
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinDistBetweenBlobs(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinDistBetweenBlobs(_ptr, value); }
     }
     
     /// <summary>
     /// Filter by color
     /// </summary>
     public bool FilterByColor
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetFilterByColor(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetFilterByColor(_ptr, value); }
     }
     
     /// <summary>
     /// Blob color
     /// </summary>
     public Byte blobColor
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetblobColor(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetblobColor(_ptr, value); }
     }
     
     /// <summary>
     /// Filter by area
     /// </summary>
     public bool FilterByArea
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetFilterByArea(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetFilterByArea(_ptr, value); }
     }
     
     /// <summary>
     /// Min area
     /// </summary>
     public float MinArea
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinArea(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinArea(_ptr, value); }
     }
     
     /// <summary>
     /// Max area
     /// </summary>
     public float MaxArea
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMaxArea(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMaxArea(_ptr, value); }
     }
     
     /// <summary>
     /// Filter by circularity
     /// </summary>
     public bool FilterByCircularity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetFilterByCircularity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetFilterByCircularity(_ptr, value); }
     }
     
     /// <summary>
     /// Min circularity
     /// </summary>
     public float MinCircularity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinCircularity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinCircularity(_ptr, value); }
     }
     
     /// <summary>
     /// Max circularity
     /// </summary>
     public float MaxCircularity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMaxCircularity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMaxCircularity(_ptr, value); }
     }
     
     /// <summary>
     /// Filter by inertia
     /// </summary>
     public bool FilterByInertia
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetFilterByInertia(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetFilterByInertia(_ptr, value); }
     }
     
     /// <summary>
     /// Min inertia ratio
     /// </summary>
     public float MinInertiaRatio
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinInertiaRatio(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinInertiaRatio(_ptr, value); }
     }
     
     /// <summary>
     /// Max inertia ratio
     /// </summary>
     public float MaxInertiaRatio
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMaxInertiaRatio(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMaxInertiaRatio(_ptr, value); }
     }
     
     /// <summary>
     /// Filter by convexity
     /// </summary>
     public bool FilterByConvexity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetFilterByConvexity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetFilterByConvexity(_ptr, value); }
     }
     
     /// <summary>
     /// Min Convexity
     /// </summary>
     public float MinConvexity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinConvexity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinConvexity(_ptr, value); }
     }
     
     /// <summary>
     /// Max Convexity
     /// </summary>
     public float MaxConvexity
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMaxConvexity(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMaxConvexity(_ptr, value); }
     }
     
     /// <summary>
     /// Min Repeatability
     /// </summary>
     public IntPtr MinRepeatability
     {
        get { return Features2DInvoke.cveSimpleBlobDetectorParamsGetMinRepeatability(_ptr); } 
        set { Features2DInvoke.cveSimpleBlobDetectorParamsSetMinRepeatability(_ptr, value); }
     }
     
   }
}
