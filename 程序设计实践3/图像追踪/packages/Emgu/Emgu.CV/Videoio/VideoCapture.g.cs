//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV
{
   public static partial class CvInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveVideoCaptureIsOpened(IntPtr obj);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     [return: MarshalAs(CvInvoke.BoolMarshalType)]
     internal static extern bool cveVideoCaptureGetExceptionMode(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVideoCaptureSetExceptionMode(
        IntPtr obj, 
        [MarshalAs(CvInvoke.BoolMarshalType)] 
        bool val);
     
   }

   public partial class VideoCapture
   {

     /// <summary>
     /// True if the camera is opened
     /// </summary>
     public bool IsOpened
     {
        get { return CvInvoke.cveVideoCaptureIsOpened(_ptr); } 
     }
     
     /// <summary>
     /// If True, methods raise exceptions if not successful instead of returning an error code
     /// </summary>
     public bool ExceptionMode
     {
        get { return CvInvoke.cveVideoCaptureGetExceptionMode(_ptr); } 
        set { CvInvoke.cveVideoCaptureSetExceptionMode(_ptr, value); }
     }
     
   }
}
