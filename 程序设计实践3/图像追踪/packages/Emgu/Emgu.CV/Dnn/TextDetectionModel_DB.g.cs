//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.Dnn
{
   public static partial class DnnInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveTextDetectionModel_DBGetBinaryThreshold(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveTextDetectionModel_DBSetBinaryThreshold(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveTextDetectionModel_DBGetPolygonThreshold(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveTextDetectionModel_DBSetPolygonThreshold(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern double cveTextDetectionModel_DBGetUnclipRatio(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveTextDetectionModel_DBSetUnclipRatio(
        IntPtr obj,  
        double val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveTextDetectionModel_DBGetMaxCandidates(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveTextDetectionModel_DBSetMaxCandidates(
        IntPtr obj,  
        int val);
     
   }

   public partial class TextDetectionModel_DB
   {

     /// <summary>
     /// Binary threshold
     /// </summary>
     public float BinaryThreshold
     {
        get { return DnnInvoke.cveTextDetectionModel_DBGetBinaryThreshold(_ptr); } 
        set { DnnInvoke.cveTextDetectionModel_DBSetBinaryThreshold(_ptr, value); }
     }
     
     /// <summary>
     /// Polygon threshold
     /// </summary>
     public float PolygonThreshold
     {
        get { return DnnInvoke.cveTextDetectionModel_DBGetPolygonThreshold(_ptr); } 
        set { DnnInvoke.cveTextDetectionModel_DBSetPolygonThreshold(_ptr, value); }
     }
     
     /// <summary>
     /// Unclip ratio
     /// </summary>
     public double UnclipRatio
     {
        get { return DnnInvoke.cveTextDetectionModel_DBGetUnclipRatio(_ptr); } 
        set { DnnInvoke.cveTextDetectionModel_DBSetUnclipRatio(_ptr, value); }
     }
     
     /// <summary>
     /// Max candidates
     /// </summary>
     public int MaxCandidates
     {
        get { return DnnInvoke.cveTextDetectionModel_DBGetMaxCandidates(_ptr); } 
        set { DnnInvoke.cveTextDetectionModel_DBSetMaxCandidates(_ptr, value); }
     }
     
   }
}
