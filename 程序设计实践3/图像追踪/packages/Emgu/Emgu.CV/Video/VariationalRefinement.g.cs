//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV
{
   public static partial class CvInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveVariationalRefinementGetFixedPointIterations(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetFixedPointIterations(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cveVariationalRefinementGetSorIterations(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetSorIterations(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveVariationalRefinementGetOmega(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetOmega(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveVariationalRefinementGetAlpha(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetAlpha(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveVariationalRefinementGetDelta(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetDelta(
        IntPtr obj,  
        float val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern float cveVariationalRefinementGetGamma(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cveVariationalRefinementSetGamma(
        IntPtr obj,  
        float val);
     
   }

   public partial class VariationalRefinement
   {

     /// <summary>
     /// Number of outer (fixed-point) iterations in the minimization procedure.
     /// </summary>
     public int FixedPointIterations
     {
        get { return CvInvoke.cveVariationalRefinementGetFixedPointIterations(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetFixedPointIterations(_ptr, value); }
     }
     
     /// <summary>
     /// Number of inner successive over-relaxation (SOR) iterations in the minimization procedure to solve the respective linear system.
     /// </summary>
     public int SorIterations
     {
        get { return CvInvoke.cveVariationalRefinementGetSorIterations(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetSorIterations(_ptr, value); }
     }
     
     /// <summary>
     /// Relaxation factor in SOR
     /// </summary>
     public float Omega
     {
        get { return CvInvoke.cveVariationalRefinementGetOmega(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetOmega(_ptr, value); }
     }
     
     /// <summary>
     /// Weight of the smoothness term
     /// </summary>
     public float Alpha
     {
        get { return CvInvoke.cveVariationalRefinementGetAlpha(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetAlpha(_ptr, value); }
     }
     
     /// <summary>
     /// Weight of the color constancy term
     /// </summary>
     public float Delta
     {
        get { return CvInvoke.cveVariationalRefinementGetDelta(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetDelta(_ptr, value); }
     }
     
     /// <summary>
     /// Weight of the gradient constancy term
     /// </summary>
     public float Gamma
     {
        get { return CvInvoke.cveVariationalRefinementGetGamma(_ptr); } 
        set { CvInvoke.cveVariationalRefinementSetGamma(_ptr, value); }
     }
     
   }
}
