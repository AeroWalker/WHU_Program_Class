//----------------------------------------------------------------------------
//  This file is automatically generated, do not modify.      
//----------------------------------------------------------------------------



using System;
using System.Runtime.InteropServices;
using Emgu.CV;
using Emgu.CV.Structure;
using Emgu.Util;

namespace Emgu.CV.PpfMatch3d
{
   public static partial class PpfMatch3dInvoke
   {

     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern double cvePose3DGetAlpha(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cvePose3DSetAlpha(
        IntPtr obj,  
        double val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern double cvePose3DGetResidual(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cvePose3DSetResidual(
        IntPtr obj,  
        double val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern double cvePose3DGetAngle(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cvePose3DSetAngle(
        IntPtr obj,  
        double val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cvePose3DGetModelIndex(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cvePose3DSetModelIndex(
        IntPtr obj,  
        int val);
     
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)] 
     internal static extern int cvePose3DGetNumVotes(IntPtr obj);
     [DllImport(CvInvoke.ExternLibrary, CallingConvention = CvInvoke.CvCallingConvention)]
     internal static extern void cvePose3DSetNumVotes(
        IntPtr obj,  
        int val);
     
   }

   public partial class Pose3D
   {

     /// <summary>
     /// Alpha value
     /// </summary>
     public double Alpha
     {
        get { return PpfMatch3dInvoke.cvePose3DGetAlpha(_ptr); } 
        set { PpfMatch3dInvoke.cvePose3DSetAlpha(_ptr, value); }
     }
     
     /// <summary>
     /// Residual value
     /// </summary>
     public double Residual
     {
        get { return PpfMatch3dInvoke.cvePose3DGetResidual(_ptr); } 
        set { PpfMatch3dInvoke.cvePose3DSetResidual(_ptr, value); }
     }
     
     /// <summary>
     /// Angle value
     /// </summary>
     public double Angle
     {
        get { return PpfMatch3dInvoke.cvePose3DGetAngle(_ptr); } 
        set { PpfMatch3dInvoke.cvePose3DSetAngle(_ptr, value); }
     }
     
     /// <summary>
     /// Model Index
     /// </summary>
     public int ModelIndex
     {
        get { return PpfMatch3dInvoke.cvePose3DGetModelIndex(_ptr); } 
        set { PpfMatch3dInvoke.cvePose3DSetModelIndex(_ptr, value); }
     }
     
     /// <summary>
     /// Number of Votes
     /// </summary>
     public int NumVotes
     {
        get { return PpfMatch3dInvoke.cvePose3DGetNumVotes(_ptr); } 
        set { PpfMatch3dInvoke.cvePose3DSetNumVotes(_ptr, value); }
     }
     
   }
}
